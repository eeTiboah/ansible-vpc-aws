
- name: Setup VPC
  hosts: localhost
  connection: local
  gather_facts: false
  tasks:

    - name: Import VPC variables
      include_vars: vars/vpc_setup

    - name: Create VPC
      ec2_vpc_net:
        name: "{{vpc_name}}"
        cidr_block: "{{vpc_cidr}}"
        region: "{{region}}"
        state: "{{state}}"
      register: vpcout

         
    - name: Create Public Subnet 1 in zone 1
      ec2_vpc_subnet: 
        state: "{{state}}"
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{az1}}"
        cidr: "{{subnet_pub1_cidr}}"
        map_public: yes
        resource_tags:
          Name: demo-vpc-pubsub1
      register: pubsub1out


    - name: Create Public Subnet 2 in zone 2
      ec2_vpc_subnet: 
        state: "{{state}}"
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{az2}}"
        cidr: "{{subnet_pub2_cidr}}"
        map_public: yes
        resource_tags:
          Name: demo-vpc-pubsub2
      register: pubsub2out


    - name: Create Public Subnet 3 in zone 3
      ec2_vpc_subnet: 
        state: "{{state}}"
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{az3}}"
        cidr: "{{subnet_pub3_cidr}}"
        map_public: yes
        resource_tags:
          Name: demo-vpc-pubsub3
      register: pubsub3out

    - name: Create Private Subnet 1 in zone 1
      ec2_vpc_subnet: 
        state: "{{state}}"
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{az1}}"
        cidr: "{{subnet_priv1_cidr}}"
        resource_tags:
          Name: demo-vpc-privsub1
      register: privsub1out


    - name: Create Private Subnet 2 in zone 2
      ec2_vpc_subnet: 
        state: "{{state}}"
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{az2}}"
        cidr: "{{subnet_priv2_cidr}}"
        resource_tags:
          Name: demo-vpc-privsub2
      register: privsub2out


    - name: Create Private Subnet 3 in zone 3
      ec2_vpc_subnet: 
        state: "{{state}}"
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{az3}}"
        cidr: "{{subnet_priv3_cidr}}"
        resource_tags:
          Name: demo-vpc-privsub3
      register: privsub3out


    - name: Internet Gateway setup
      ec2_vpc_igw:
        state: "{{state}}"
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        resource_tags:
          Name: demo-vpc-igw
      register: igwout


    - name: Set up route table for public subnet
      ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        resource_tags:
          Name: demo-vpc-rtb
        subnets:
          - "{{pubsub1out.subnet.id}}"
          - "{{pubsub2out.subnet.id}}"
          - "{{pubsub3out.subnet.id}}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{igwout.gateway_id}}"
      register: rtbpubout

    
    - name: Create Security Group for NAT instance
      ec2_group:
        name: "NATSG"
        description: "This is the security group for the NAT instance"
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
            rule_desc: allow ssh connection
          
          - proto: icmp
            from_port: 0
            to_port: 65535
            cidr_ip: 0.0.0.0/0
            rule_desc: allow all icmp connections
      register: natsgout

    - name: Set up a NAT instance
      ec2_instance:
        name: "NAT instance"
        key_name: "sample_keypair"
        vpc_subnet_id: "{{pubsub1out.subnet.id}}"
        image_id: "{{nat_instance_ami}}"
        region: "{{region}}"
        state: "{{state}}"
        security_group: "{{natsgout.group_name}}"
        network:
          assign_public_ip: true
        tags:
          Name: "Nat Instance"
      register: natinstanceout
    
    - name: Set up route table for NAT instance
      ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        resource_tags:
          Name: demo-vpc-nat-rtb
        subnets:
          - "{{privsub1out.subnet.id}}"
          - "{{privsub2out.subnet.id}}"
          - "{{privsub3out.subnet.id}}"
        routes:
          - dest: 0.0.0.0/0
            instance_id: "{{natinstanceout.instances[0].instance_id}}"
      register: rtbnatout


    - name: Save outputs into a file
      copy:
        content: "vpc_id: {{vpcout.vpc.id}}\npubsub1id: {{pubsub1out.subnet.id}}\npubsub2id: {{pubsub2out.subnet.id}}\npubsub3id: {{pubsub3out.subnet.id}}\nprivsub1id: {{privsub1out.subnet.id}}\nprivsub2id: {{privsub2out.subnet.id}}\nprivsub3id: {{privsub3out.subnet.id}}\nigwid: {{igwout.gateway_id}}\nrtbpubid: {{rtbpubout.route_table.id}}\nnatinstanceid: {{natinstanceout.instances[0].instance_id}}\nrtbnatid: {{rtbnatout.route_table.id}}"
        dest: vars/output_vars



      